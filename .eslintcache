[{"/Users/matt/Desktop/okmap/okmap/src/index.js":"1","/Users/matt/Desktop/okmap/okmap/src/App.js":"2","/Users/matt/Desktop/okmap/okmap/src/components/HomeContainer.jsx":"3","/Users/matt/Desktop/okmap/okmap/src/components/Navbar.jsx":"4","/Users/matt/Desktop/okmap/okmap/src/components/Cover.jsx":"5","/Users/matt/Desktop/okmap/okmap/src/components/About.jsx":"6","/Users/matt/Desktop/okmap/okmap/src/components/Footer.jsx":"7","/Users/matt/Desktop/okmap/okmap/src/components/Button.jsx":"8","/Users/matt/Desktop/okmap/okmap/src/components/CoverSection.jsx":"9","/Users/matt/Desktop/okmap/okmap/src/components/HomeComponents/Phone.jsx":"10","/Users/matt/Desktop/okmap/okmap/src/components/HomeComponents/Map.jsx":"11","/Users/matt/Desktop/okmap/okmap/src/components/PortalComponents/Portals.jsx":"12","/Users/matt/Desktop/okmap/okmap/src/components/ButtonGroup.jsx":"13","/Users/matt/Desktop/okmap/okmap/src/components/PortalComponents/SinglePortal.jsx":"14","/Users/matt/Desktop/okmap/okmap/src/components/QuizComponenets/Quiz.jsx":"15","/Users/matt/Desktop/okmap/okmap/src/components/SVG.jsx":"16"},{"size":434,"mtime":1608448391537,"results":"17","hashOfConfig":"18"},{"size":683,"mtime":1608448391299,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608448391467,"results":"20","hashOfConfig":"18"},{"size":2039,"mtime":1608448391470,"results":"21","hashOfConfig":"18"},{"size":2101,"mtime":1608606262245,"results":"22","hashOfConfig":"18"},{"size":2324,"mtime":1608606285436,"results":"23","hashOfConfig":"18"},{"size":1716,"mtime":1608448391460,"results":"24","hashOfConfig":"18"},{"size":776,"mtime":1608448391452,"results":"25","hashOfConfig":"18"},{"size":956,"mtime":1608448391458,"results":"26","hashOfConfig":"18"},{"size":327,"mtime":1608448391463,"results":"27","hashOfConfig":"18"},{"size":5695,"mtime":1608605554307,"results":"28","hashOfConfig":"18"},{"size":2972,"mtime":1608517520045,"results":"29","hashOfConfig":"18"},{"size":757,"mtime":1608448391454,"results":"30","hashOfConfig":"18"},{"size":974,"mtime":1608448391475,"results":"31","hashOfConfig":"18"},{"size":3417,"mtime":1608606318572,"results":"32","hashOfConfig":"18"},{"size":11843,"mtime":1608448391478,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tq26kp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matt/Desktop/okmap/okmap/src/index.js",[],["74","75"],"/Users/matt/Desktop/okmap/okmap/src/App.js",["76"],"import './style.css';\nimport {useState} from 'react'\nimport Navbar from './components/Navbar'\nimport Cover from './components/Cover'\nimport HomeContainer from './components/HomeContainer';\nimport About from './components/About'\nimport Footer from './components/Footer';\n\n\nfunction App() {\n\n  const [kaleochat, setKaleoChat] = useState(false)\n  const handleKClick = () => {\n    setKaleoChat('true')\n  }\n\nconst [imgstate, setImgState ] = useState('')\n\n  \n\n  return (\n<div style={{backgroundColor:\"#f9f7ec\"}}>\n  <Navbar handleClick={handleKClick} />\n  <Cover kaleostate={kaleochat} imgstate={imgstate}/>\n  <HomeContainer/>\n  <About/>\n  <Footer/>\n</div>\n    \n  );\n}\n\nexport default App;\n","/Users/matt/Desktop/okmap/okmap/src/components/HomeContainer.jsx",["77","78"],"import React from 'react'\nimport Map from './HomeComponents/Map'\nimport Phone from './HomeComponents/Phone'\n\nimport CD from '../Assets/civil defense logo.jpeg'\n\nfunction HomeContainer() {\n    return (\n    <div class=\"  grid-wrapper\">\n        <div class=\"box zone king\">\n            <Map/>\n        </div>\n        \n    </div>\n    )\n}\n\nexport default HomeContainer\n","/Users/matt/Desktop/okmap/okmap/src/components/Navbar.jsx",["79","80","81","82"],"import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport OK from '../Assets/Gateway.png'\n\n\nfunction Navbar(props) {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => {\n      setClick(false);\n      console.log('hi')\n  }\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n\n          <img src={OK} alt={\"ok\"} className='navbar-icon' />\n\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <a href='https://ourkuleanahawaii.com/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </a>\n            </li>\n            <li>\n              <a\n                \n                \n                className='nav-links-mobile'\n                onClick={closeMobileMenu}\n              >\n                Pledge\n              </a>\n            </li>\n            {button ? (\n              <a className='btn-link'>\n                <Button onClick={props.handleClick} buttonStyle='btn--outline'>PLEDGE</Button>\n              </a>\n            ) : (\n              <a className='btn-link'>\n                <Button\n                  buttonStyle='btn--outline'\n                  buttonSize='btn--mobile'\n                  onClick={closeMobileMenu}\n                >\n                </Button>\n                </a>\n            )}\n          </ul>\n          \n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","/Users/matt/Desktop/okmap/okmap/src/components/Cover.jsx",["83","84","85"],"import React, {useState} from 'react'\nimport './Cover.css'\nimport CoverSection from './CoverSection'\nimport Portals from './PortalComponents/Portals'\n\nimport bb from '/Users/matt/Desktop/okmap/okmap/src/Assets/kaleochallenge.png'\n\nfunction Cover(props) {\n\n    const [homeBanner, setHomeBanner] = useState(false)\n    const [yesBanner, setYesBanner] = useState(false)\n    const [noBanner, setNoBanner] = useState(false)\n    const kaleo = props.kaleostate\n    const [kaleocover, setKaleoCover ] = useState(true)\n    const [bubble, setbubble] = useState(true)\n\n    const handleCover = () => {\n        setKaleoCover(!kaleocover)\n        setbubble(false)\n        setHomeBanner(!homeBanner)\n    }\n\n\n    const handleClickYes = () => {\n        \n            setHomeBanner(false)\n            setYesBanner(true)\n            \n\n    }\n\n    const handleClickNo = () => {\n        \n        setHomeBanner(false)\n        setNoBanner(true)\n        \n\n}\n\n    return (\n        <div class=\"container background\">\n        <img class=\"backgroundimg\">\n        </img>\n            <div className=\"portalscontainer\">\n                \n            </div>\n            \n\n            <div className=\"banner\"></div>\n            \n            <div className=\"covercardbox\">\n                \n                <button className=\"coverbutton\" onClick={handleCover}>\n                <i className='fas fa-chevron-left fa-4x ci' />\n                </button>\n                    <CoverSection \n                    homeBanner={homeBanner} \n                    yesBanner={yesBanner}\n                    noBanner={noBanner} \n                    kaleo={kaleocover}\n                    handleClickYes={handleClickYes}\n                    handleClickNo={handleClickNo}\n                    />\n                    <button className=\"coverbutton\" onClick={handleCover}>\n                    {bubble && <img onClick={handleCover} className=\"bubble\" src={bb} alt=\"hi\"></img>}\n                    <i className='fas fa-chevron-right fa-4x ci' />\n                </button>\n            </div>\n            \n            \n        </div>\n    )\n}\n\nexport default Cover\n","/Users/matt/Desktop/okmap/okmap/src/components/About.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/Footer.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/Button.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/CoverSection.jsx",["86","87"],"import React from 'react'\nimport ButtonGroup from './ButtonGroup'\nimport Phone from './HomeComponents/Phone'\nimport './Cover.css'\nimport {CircularProgress} from '@material-ui/core'\n\nimport {AnimatePresence, motion} from 'framer-motion'\n\nimport Quiz from './QuizComponenets/Quiz'\n\nfunction CoverSection(props) {\n    return (\n        <>\n        <AnimatePresence exitBeforeEnter>\n        \n        { props.kaleo && \n            <motion.div key=\"home\" className=\"covercard1 holds-the-iframe\" initial={{ x: 1000, opacity: 1 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: -1700, opacity: 1 }}>\n                <Phone/>\n        </motion.div>\n    }\n\n    \n    \n    {props.homeBanner && <motion.div key=\"home\" className=\"covercard\" initial={{ x: 1000, opacity: 1 }}\n    animate={{ x: 0, opacity: 1 }}\n    exit={{ x: -1700, opacity: 1 }}>\n        <Quiz/>\n    </motion.div>}\n    </AnimatePresence>\n        </>\n    )\n}\n\nexport default CoverSection\n","/Users/matt/Desktop/okmap/okmap/src/components/HomeComponents/Phone.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/HomeComponents/Map.jsx",["88","89","90","91"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, {Marker, NavigationControl, Popup} from 'react-map-gl';\nimport * as data from '../../DATA/kuleanadata.json'\nimport * as tdata from '../../DATA/zipcode.json'\nimport OK from '../../Assets/Gateway.png'\n\nimport './Map.css'\nimport { AnimatePresence, motion } from 'framer-motion';\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport OKM from '../../Assets/CommunityFirst-9720-TNiimi-10.jpg'\nimport svg from '../../Assets/location-pin-svgrepo-com (1).svg'\n\n\nfunction Map() {\n\n    const [selectedPark, setSelectedPark] = useState(\"\");\n    const [selectedZip, setSelectedZip] = useState(\"\")\n    const [mapKuleana, setMapKuleana] = useState(true)\n    const [mapZipcode, setMapZipcode] = useState(true)\n    const [legend, setLegend] = useState(false)\n    const [viewport, setViewport] = useState({\n        width: \"100%\",\n        height: \"500px\",\n        latitude: 19.741755,\n        longitude: -155.6659,\n        zoom: 8,\n        offset: [0, -50/2]\n    });\n\n    return (\n        <div className=\"mapbox\">\n        <AnimatePresence>\n        { legend && \n            <motion.div key={`${selectedPark.properties.KULEANA_ID}`} className=\"maplegend\" initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}>\n            <div className=\"mapnav\">\n                <div className=\"icon1\">\n                    <img src={OK} alt={\"ok\"} className='navbar-icon' />\n                </div>\n            </div>\n                <div className=\"mapdata\">\n                    <img src={OKM} className=\"mapimg\"/>\n                    <text className=\"texttitle\">{selectedPark.properties.NAME}</text>\n                    <text className=\"textrating\">{selectedPark.properties.RATING}</text>\n                    <text className=\"text\">{selectedPark.properties.DESCRIPTIO}</text>\n                    <text className=\"texttitle2\">Kuleana Deals</text>\n                    <text className=\"text\">{selectedPark.properties.COUPONS}</text>\n                </div>\n            </motion.div>}\n        </AnimatePresence>\n        \n            <ReactMapGL\n            {...viewport}\n            mapStyle=\"mapbox://styles/otanisama/ckg51fmse147k19lf4znh058c\"\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n            onViewportChange={nextViewport => setViewport(nextViewport)}>\n            <div style={{position: 'absolute', right: 0}}>\n                <NavigationControl />\n            </div>\n            \n\n            { \n                mapKuleana && data.features.map(park => (\n                <Marker key={park.properties.PARK_ID} \n                latitude={park.geometry.coordinates[1]}    \n                longitude={park.geometry.coordinates[0]}\n                offsetLeft={-12}\n                offsetTop={-24}\n                >\n                  <button className=\"marker-btn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    // set state to selected maped park\n                    setSelectedPark(park);\n                    setLegend(true)\n                   \n                  }}\n                  >\n                      <svg viewBox=\"0 0 24 24\" \n                      stroke-width=\"1.5\" \n                      fill=\"none\" \n                      stroke-linecap=\"round\" \n                      stroke-linejoin=\"round\" \n                      className=\"marker\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle></svg>\n                  </button>\n                </Marker>\n              ))\n            }\n\n            {\n                mapZipcode && tdata.features.map(tpark =>(\n                    <Marker key={tpark.properties._ID}\n                    latitude={tpark.geometry.coordinates[1]}\n                    longitude={tpark.geometry.coordinates[0]}\n                    offsetLeft={-12}\n                    offsetTop={-24}\n                    >\n                        <button className=\"marker-btn\"\n                        onClick={(e) => {\n                        e.preventDefault();\n                        // set state to selected maped park\n                        setSelectedPark(tpark);\n                        setSelectedZip(tpark);\n                        setLegend(false);\n                            \n                  }}>\n\n                    <svg viewBox=\"0 0 24 24\" \n                    stroke-width=\"1.5\" \n                    stroke-linecap=\"round\" \n                    stroke-linejoin=\"round\" \n                    className=\"marker\"\n                    fill=\"none\"><circle cx=\"12\" cy=\"8\" r=\"7\"></circle><polyline points=\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"></polyline></svg>\n\n                  </button>\n\n                    </Marker>\n\n                    \n\n            \n                    \n                ))\n            }\n            {\n            \n            selectedZip ? (\n                <Popup\n                latitude={selectedZip.geometry.coordinates[1]}\n                longitude={selectedZip.geometry.coordinates[0]}\n                onClose={() => {\n                    setSelectedZip(null)\n                }}\n                className=\"mainpop\"\n                >\n                    <div className=\"popup\">\n                        <h1 className=\"black\">{selectedZip.properties.ZIP}</h1>\n                        <p className=\"black\">Quizzes taken: {selectedZip.properties.SCORE}</p>\n                        <p className=\"black\">Average Score: {selectedZip.properties.SCORE}%</p>\n                    </div>\n                </Popup>\n                ) : null}\n            \n            \n            </ReactMapGL>\n        </div>\n    )\n}\n\nexport default Map\n","/Users/matt/Desktop/okmap/okmap/src/components/PortalComponents/Portals.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/ButtonGroup.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/PortalComponents/SinglePortal.jsx",[],"/Users/matt/Desktop/okmap/okmap/src/components/QuizComponenets/Quiz.jsx",["92"],"import React, {useState} from 'react'\nimport './quiz.css'\nimport {Button} from '../Button'\n\nfunction Quiz() {\n    const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst [name, setName] = useState('')\n\tconst [zipcode, setZipcode] = useState('')\n\n\tconst handleName = (event) => {\n\t\tsetName(event.target.value)\n\t}\n\tconst handleZipcode = (event) => {\n\t\tsetZipcode(event.target.value)\n\t}\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\talert(`${name} scored ${score} out of ${questions.length} for ${zipcode}`)\n\t}\n\n\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n    return (\n        <div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\t<text className=\"titletext\">Mahalo for taking our quiz!</text>\n\t\t\t\t\t<text>You scored {score} out of {questions.length}</text>\n\t\t\t\t\t<text>Check the map below to see how your district is doing</text>\n\n\t\t\t\t\t<div className=\"buttoncontainer\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tName:\n\t\t\t\t\t\t\t\t\t<input type=\"text\" value={name} onChange={handleName}/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tZipcode:\n\t\t\t\t\t\t\t\t\t<input type=\"text\" value={zipcode} onChange={handleZipcode}/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\t\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t<div><text className=\"titletext\">How COVID Akamai are you?</text></div>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1} / {questions.length}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n    )\n}\n\nexport default Quiz\n","/Users/matt/Desktop/okmap/okmap/src/components/SVG.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":17,"column":18,"nodeType":"99","messageId":"100","endLine":17,"endColumn":29},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":10},{"ruleId":"97","severity":1,"message":"103","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":49,"column":15,"nodeType":"106","endLine":54,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":59,"column":15,"nodeType":"106","endLine":59,"endColumn":39},{"ruleId":"104","severity":1,"message":"105","line":63,"column":15,"nodeType":"106","endLine":63,"endColumn":39},{"ruleId":"97","severity":1,"message":"107","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":13,"column":11,"nodeType":"99","messageId":"100","endLine":13,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":42,"column":9,"nodeType":"106","endLine":42,"endColumn":36},{"ruleId":"97","severity":1,"message":"111","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"112","line":5,"column":9,"nodeType":"99","messageId":"100","endLine":5,"endColumn":25},{"ruleId":"97","severity":1,"message":"113","line":2,"column":20,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"114","line":20,"column":24,"nodeType":"99","messageId":"100","endLine":20,"endColumn":37},{"ruleId":"97","severity":1,"message":"115","line":21,"column":24,"nodeType":"99","messageId":"100","endLine":21,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":45,"column":21,"nodeType":"106","endLine":45,"endColumn":56},{"ruleId":"97","severity":1,"message":"116","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'setImgState' is assigned a value but never used.","Identifier","unusedVar","'Phone' is defined but never used.","'CD' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Portals' is defined but never used.","'kaleo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ButtonGroup' is defined but never used.","'CircularProgress' is defined but never used.","'useEffect' is defined but never used.","'setMapKuleana' is assigned a value but never used.","'setMapZipcode' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]